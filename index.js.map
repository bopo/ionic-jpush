{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/j-push/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * This is a template for new plugin wrappers\n *\n * TODO:\n * - Add/Change information below\n * - Document usage (importing, executing main functionality)\n * - Remove any imports that you are not using\n * - Add this file to /src/index.ts (follow style of other plugins)\n * - Remove all the comments included in this template, EXCEPT the @Plugin wrapper docs.\n * - Remove this note\n *\n */\nimport { Plugin, Cordova } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * @name JPush\n * @description\n * This plugin does something\n *\n * @usage\n * ```\n * import { JPush } from 'ionic3-jpush';\n *\n * JPush.functionName('Hello', 123)\n *   .then((something: any) => doSomething(something))\n *   .catch((error: any) => console.log(error));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'JPush',\n  plugin: 'jpush-phonegap-plugin', // npm package name, example: cordova-plugin-camera\n  pluginRef: 'plugins.jPushPlugin', // the variable reference to call the plugin, example: navigator.geolocation\n  repo: 'https://github.com/jpush/jpush-phonegap-plugin', // the github repository URL for the plugin\n  platforms: ['Android', 'iOS']\n  // install: '' // OPTIONAL install command, in case the plugin requires variables\n})\nexport class JPush {\n\n  /**\n   * 调用此 API，用来开启 JPush SDK 提供的推送服务。\n   * 开发者 App 可以通过调用停止推送服务 API 来停止极光推送服务。当又需要使用极光推送服务时，则必须要调用恢复推送服务 API。\n   * 本功能是一个完全本地的状态操作，也就是说：停止推送服务的状态不会保存到服务器上。\n   * 如果停止推送服务后，开发者 App 被重新安装，或者被清除数据，JPush SDK 会恢复正常的默认行为（因为保存在本地的状态数据被清除掉了）。\n   * 本功能其行为类似于网络中断的效果，即：推送服务停止期间推送的消息，恢复推送服务后，如果推送的消息还在保留的时长范围内，则客户端是会收到离线消息。\n   *\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  init(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  /**\n   * Android:\n\n  * 开发者 App 可以通过调用停止推送服务 API 来停止极光推送服务，当又需要使用极光推送服务时，则必须要调用恢复推送服务 API。\n  * 调用了本 API 后，JPush 推送服务完全被停止，具体表现为：\n  * JPush Service 不在后台运行。\n  * 收不到推送消息。\n  * 不能通过 init 方法恢复，而需要调用 resumePush 恢复。\n  * 极光推送其他所有的 API 调用都无效。\n  * iOS:\n  *\n  * 不推荐调用，因为这个 API 只是让你的 DeviceToken 失效，在 设置－通知 中您的应用程序没有任何变化。建议设置一个 UI 界面， 提醒用户在 设置－通知 中关闭推送服务。\n  *\n  * @returns {Promise<any>}\n  * @memberof JPush\n  */\n  @Cordova()\n  stopPush(): Promise<any> {\n    return;\n  };\n\n  /**\n   * 恢复推送服务。调用了此 API 后:\n   * Android 平台:\n   * 极光推送完全恢复正常工作。\n   * iOS 平台:\n   * 重新去 APNS 注册。\n   *\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  resumePush(): Promise<any> {\n    return;\n  };\n\n  /**\n   * Android 平台: 用来检查 Push Service 是否已经被停止。\n   * iOS 平台: 平台检查推送服务是否注册。\n   *\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  isPushStopped(): Promise<any> {\n    return;\n  };\n\n  /**\n   * 集成了 JPush SDK 的应用程序在第一次成功注册到 JPush 服务器时，JPush 服务器会给客户端返回一个唯一的该设备的标识 - RegistrationID。 JPush SDK 会以广播的形式发送 RegistrationID 到应用程序。\n   * 应用程序可以把此 RegistrationID 保存以自己的应用服务器上，然后就可以根据 RegistrationID 来向设备推送消息或者通知。\n   *\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  getRegistrationID(): Promise<any> {\n    return;\n  };\n\n  /**\n   * 设置标签。注意这个接口是覆盖逻辑，而不是增量逻辑。即新的调用会覆盖之前的设置。\n   *\n   * @param {{ sequence: number, tags?: string[] }} params  tags: Array，标签数组\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  setTags(params: { sequence: number, tags?: string[] }): Promise<any> {\n    return;\n  };\n\n  /**\n   * 新增标签。\n   *\n   * @param {{ sequence: number, tags?: string[] }} params  tags: Array，标签数组。\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  addTags(params: { sequence: number, tags?: string[] }): Promise<any> {\n    return;\n  };\n\n  /**\n   * 删除标签\n   *\n   * @param {{ sequence: number }} params\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  deleteTags(params: { sequence: number }): Promise<any> {\n    return;\n  };\n\n  /**\n   * 清除所有标签。\n   *\n   * @param {{ sequence: number }} params\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  cleanTags(params: { sequence: number }): Promise<any> {\n    return;\n  };\n\n  /**\n   * 获取当前绑定的所有标签。\n   *\n   * @param {{ sequence: number }} params\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  getAllTags(params: { sequence: number }): Promise<any> {\n    return;\n  };\n\n  /**\n   * 查询指定tag与当前用户绑定的状态。\n   *\n   * @param {{ sequence: number, tag: string }} params  tag: string，待查询的 tag。\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  checkTagBindState(params: { sequence: number, tag: string }): Promise<any> {\n    return;\n  };\n\n  /**\n   * 设置别名。注意这个接口是覆盖逻辑，而不是增量逻辑。即新的调用会覆盖之前的设置。\n   *\n   * @param {{ sequence: number, alias?: string }} params\n   * sequence: number。用户自定义的操作序列号, 同操作结果一起返回，用来标识一次操作的唯一性。\n   * alias: string。 每次调用设置有效的别名将覆盖之前的设置。 有效的别名组成：字母（区分大小写）、数字、下划线、汉字、特殊字符@!#$&*+=.|。 限制：alias 命名长度限制为 40 字节（判断长度需采用 UTF-8 编码）。\n   * @returns {Promise<any>}\n   * @memberof JPush\n   */\n  @Cordova()\n  setAlias(params: { sequence: number, alias?: string[] }): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  deleteAlias(params: { sequence: number }): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  getAlias(params: { sequence: number }): Promise<any> {\n    return;\n  };\n\n  @Cordova({\n    platforms: ['iOS']\n  })\n  setBadge(badgeNum?: number): Promise<any> {\n    return;\n  };\n\n  @Cordova({\n    platforms: ['iOS']\n  })\n  setApplicationIconBadgeNumber(badgeNum?: number): Promise<any> {\n    return;\n  };\n\n  @Cordova({\n    platforms: ['iOS']\n  })\n  getApplicationIconBadgeNumber(): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  getUserNotificationSettings(): Promise<any> {\n    return;\n  };\n\n  @Cordova({\n    platforms: ['iOS']\n  })\n  addLocalNotificationForIOS(option: LocalNotificationOption): Promise<any> {\n    return;\n  };\n\n  @Cordova({\n    platforms: ['iOS']\n  })\n  deleteLocalNotificationWithIdentifierKeyInIOS(identifierKey: String): Promise<any> {\n    return;\n  };\n\n  @Cordova({\n    platforms: ['iOS']\n  })\n  clearAllLocalNotifications(): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  setLocation(latitude: String | Number, longitude: String | Number): Promise<any> {\n    return;\n  };\n\n  @Cordova()\n  isPlatformIOS(): Promise<any> {\n    return;\n  };\n\n  @Cordova({\n    platforms: ['iOS']\n  })\n  addDismissActions(actions, categoryId: String): Promise<any> {\n    return;\n  };\n\n  @Cordova({\n    platforms: ['iOS']\n  })\n  addNotificationActions(actions, categoryId: String): Promise<any> {\n    return;\n  };\n\n  @Cordova({\n    eventObservable: true,\n    event: 'jpush.openNotification',\n    element: document\n  })\n  openNotification(): Observable<any> {\n    return;\n  };\n\n  @Cordova({\n    eventObservable: true,\n    event: 'jpush.receiveNotification',\n    element: document\n  })\n  receiveNotification(): Observable<any> {\n    return;\n  };\n\n  @Cordova({\n    eventObservable: true,\n    event: 'jpush.receiveMessage',\n    element: document\n  })\n  receiveMessage(): Observable<any> {\n    return;\n  };\n}\n\nexport interface LocalNotificationOption {\n  delayTime: String | Number;\n  content: String;\n  badge: String | Number;\n  notificationID: String;\n  extras: Object;\n}\n\nexport interface DismissActions {\n  title: String;\n  identifier: String;\n  option: String;\n  type?: String;\n  textInputButtonTitle?: String;\n  textInputPlaceholder?: String;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}